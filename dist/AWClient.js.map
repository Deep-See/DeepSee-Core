{"version":3,"file":"AWClient.js","sourceRoot":"","sources":["../src/AWClient.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;GAaG;;AAIH,6DAA0D;AAE1D;;GAEG;AACH,MAAa,QAAQ;IAKjB,YAAY,OAAgB;QAFpB,aAAQ,GAAiC,EAAE,CAAC;QAGhD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC3B,CAAC;IAED;;OAEG;IACH,WAAW;QACP,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IAED,iBAAiB,CAAC,OAAgB;QAC9B,OAAO,IAAI,+BAAc,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IACrD,CAAC;IAED;;;OAGG;IACH,aAAa,CAAC,OAAgB;QAC1B,OAAO,IAAI,OAAO,CAAM,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACxC,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,SAAS,EAAE;gBAC1C,MAAM,CAAC,IAAI,KAAK,CAAC,2BAA2B,GAAG,OAAO,CAAC,IAAI,GAAG,uBAAuB,CAAC,CAAC,CAAC;aAC3F;iBAAM;gBACH,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;gBACtC,OAAO,EAAE,CAAC;aACb;QACL,CAAC,CAAC,CAAA;IACN,CAAC;IAED;;;OAGG;IACH,aAAa,CAAC,IAAY;QACtB,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAED;;;;OAIG;IACH,qBAAqB,CAAC,IAAY,EAAE,WAAgB;QAChD,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,cAAc,EAAE,WAAW,CAAC,CAAC;IACjE,CAAC;CAEJ;AApDD,4BAoDC","sourcesContent":["/**\n *  Copyright 2019 The Adaptive Web. All Rights Reserved.\n * \n *  Licensed under the Mozilla Public License 2.0 (the \"License\"). \n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *  \n *      https://www.mozilla.org/en-US/MPL/2.0/\n *  \n *  or in the \"license\" file accompanying this file. This file is distributed \n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either \n *  express or implied. See the License for the specific language governing \n *  permissions and limitations under the License.\n */\n\nimport { Wrapper } from \"./wrapper\";\nimport { Adapter } from \"./adapter/Adapter\";\nimport { AdapterContext } from './adapter/AdapterContext';\n\n/**\n * Maintains application state.\n */\nexport class AWClient {\n\n    private wrapper: Wrapper;\n    private adapters: { [uuid: string]:  Adapter } = {};\n\n    constructor(wrapper: Wrapper) {\n        this.wrapper = wrapper;\n    }\n\n    /**\n     * Get the adapters\n     */\n    getAdapters() {\n        return this.adapters;\n    }\n\n    getAdapterContext(adapter: Adapter) {\n        return new AdapterContext(this.wrapper, adapter);\n    }\n\n    /**\n     * Attaches an adapter\n     * @param adapter the adapter to attach\n     */\n    attachAdapter(adapter: Adapter): Promise<any> {\n        return new Promise<any>((resolve, reject) => {\n            if (this.adapters[adapter.uuid] != undefined) {\n                reject(new Error('An adapter with the UUID ' + adapter.uuid + ' is already attached.'));\n            } else {\n                this.adapters[adapter.uuid] = adapter;\n                resolve();\n            }\n        })\n    }\n\n    /**\n     * Detach an adapter\n     * @param uuid the uuid of the adapter to detach\n     */\n    detachAdapter(uuid: string) {\n        delete this.adapters[uuid];\n    }\n\n    /**\n     * Sets the preferences for an adapter\n     * @param uuid the uuid of the adapter\n     * @param preferences the preferences to set\n     */\n    setAdapterPreferences(uuid: string, preferences: any) {\n        this.wrapper.storage.set(uuid + '/preferences', preferences);\n    }\n\n}"]}