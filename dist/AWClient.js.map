{"version":3,"file":"AWClient.js","sourceRoot":"","sources":["../src/AWClient.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;GAaG;;AAIH,6DAA0D;AAE1D;;GAEG;AACH,MAAa,QAAQ;IAKpB,YAAY,OAAgB;QAHpB,aAAQ,GAA8B,EAAE,CAAC;QACzC,eAAU,GAAY,KAAK,CAAC;QAGnC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACxB,CAAC;IAED,IAAI;QACH,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,QAAa,EAAE,EAAE;YAClE,IAAI,CAAC,QAAQ,GAAG,QAAQ,IAAI,EAAE,CAAC;YAC/B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,OAAO,IAAI,CAAC,QAAQ,CAAC;QACtB,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,IAAI,SAAS;QACZ,OAAO,IAAI,CAAC,UAAU,CAAC;IACxB,CAAC;IAED;;;OAGG;IACH,gBAAgB,CAAC,UAAe;QAC/B,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,UAAU,CAAC,CAAC;IAC9D,CAAC;IAED;;OAEG;IACH,gBAAgB;QACf,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;IAClD,CAAC;IAED;;OAEG;IACH,WAAW;QACV,OAAO,IAAI,CAAC,QAAQ,CAAC;IACtB,CAAC;IAED;;;OAGG;IACH,iBAAiB,CAAC,OAAgB;QACjC,OAAO,IAAI,+BAAc,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAClD,CAAC;IAED;;;OAGG;IACH,aAAa,CAAC,OAAgB,EAAE,UAAmB,KAAK;QACvD,OAAO,IAAI,OAAO,CAAM,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YAC3C,IACC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,SAAS;gBACtC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,OAAO;gBACrD,CAAC,OAAO,EACP;gBACD,MAAM,CACL,0BAA0B,OAAO,CAAC,EAAE,aACnC,OAAO,CAAC,OACT,wBAAwB,CACxB,CAAC;aACF;iBAAM;gBACN,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC;gBACpC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAEpD,yCAAyC;gBACzC,IAAI,WAAW,GAAQ,EAAE,CAAC;gBAC1B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;oBACnD,WAAW,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC;gBAC1D,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC;gBACpD,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACvB,OAAO;aACP;QACF,CAAC,CAAC,CAAC;IACJ,CAAC;IAED;;;OAGG;IACH,aAAa,CAAC,EAAU;QACvB,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IACrD,CAAC;IAED;;;;OAIG;IACH,qBAAqB,CAAC,EAAU,EAAE,WAAgB;QACjD,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,GAAG,cAAc,EAAE,WAAW,CAAC,CAAC;IAC5D,CAAC;IAED;;;;OAIG;IACH,wBAAwB,CAAC,EAAU,EAAE,WAAgB;QACpD,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,GAAG,cAAc,CAAC,CAAC,IAAI,CAAC,CAAC,SAAc,EAAE,EAAE;YACrE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;gBACpC,IACC,WAAW,CAAC,GAAG,CAAC,KAAK,SAAS;oBAC9B,SAAS,CAAC,GAAG,CAAC,KAAK,WAAW,CAAC,GAAG,CAAC,EAClC;oBACD,SAAS,CAAC,GAAG,CAAC,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;iBAClC;YACF,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,qBAAqB,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACJ,CAAC;IAED;;;OAGG;IACH,qBAAqB,CAAC,EAAU;QAC/B,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,GAAG,cAAc,CAAC,CAAC;IACtD,CAAC;CACD;AA/HD,4BA+HC","sourcesContent":["/**\n *  Copyright 2019 The Adaptive Web. All Rights Reserved.\n *\n *  Licensed under the Mozilla Public License 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *      https://www.mozilla.org/en-US/MPL/2.0/\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport { Wrapper } from './wrapper';\nimport { Adapter } from './adapter/Adapter';\nimport { AdapterContext } from './adapter/AdapterContext';\n\n/**\n * Maintains application state.\n */\nexport class AWClient {\n\tprivate wrapper: Wrapper;\n\tprivate adapters: { [id: string]: Adapter } = {};\n\tprivate _initiated: boolean = false;\n\n\tconstructor(wrapper: Wrapper) {\n\t\tthis.wrapper = wrapper;\n\t}\n\n\tinit(): Promise<any> {\n\t\treturn this.wrapper.storage.get('adapters').then((adapters: any) => {\n\t\t\tthis.adapters = adapters || {};\n\t\t\tthis._initiated = true;\n\t\t\treturn this.adapters;\n\t\t});\n\t}\n\n\tget initiated(): boolean {\n\t\treturn this._initiated;\n\t}\n\n\t/**\n\t * Saves global options (used by the configuration site and interacting with awcli)\n\t * @param newOptions the options to save\n\t */\n\tsetGlobalOptions(newOptions: any): Promise<any> {\n\t\treturn this.wrapper.storage.set('globalOptions', newOptions);\n\t}\n\n\t/**\n\t * Fetch the global options.\n\t */\n\tgetGlobalOptions(): Promise<any> {\n\t\treturn this.wrapper.storage.get('globalOptions');\n\t}\n\n\t/**\n\t * Get the adapters\n\t */\n\tgetAdapters() {\n\t\treturn this.adapters;\n\t}\n\n\t/**\n\t * Returns a new AdapterContext.\n\t * @param adapter the adapter to generate an AdapterContext for\n\t */\n\tgetAdapterContext(adapter: Adapter) {\n\t\treturn new AdapterContext(this.wrapper, adapter);\n\t}\n\n\t/**\n\t * Attaches an adapter\n\t * @param adapter the adapter to attach\n\t */\n\tattachAdapter(adapter: Adapter, replace: boolean = false): Promise<any> {\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\tif (\n\t\t\t\tthis.adapters[adapter.id] != undefined &&\n\t\t\t\tthis.adapters[adapter.id].version === adapter.version &&\n\t\t\t\t!replace\n\t\t\t) {\n\t\t\t\treject(\n\t\t\t\t\t`An adapter with the ID ${adapter.id} (version ${\n\t\t\t\t\t\tadapter.version\n\t\t\t\t\t}) is already attached.`\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.adapters[adapter.id] = adapter;\n\t\t\t\tthis.wrapper.storage.set('adapters', this.adapters);\n\n\t\t\t\t// Set this adapter's default preferences\n\t\t\t\tlet preferences: any = {};\n\t\t\t\tObject.keys(adapter.preferenceSchema).forEach(key => {\n\t\t\t\t\tpreferences[key] = adapter.preferenceSchema[key].default;\n\t\t\t\t});\n\t\t\t\tthis.setAdapterPreferences(adapter.id, preferences);\n\t\t\t\tresolve(this.adapters);\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Detach an adapter\n\t * @param id the id of the adapter to detach\n\t */\n\tdetachAdapter(id: string) {\n\t\tdelete this.adapters[id];\n\t\tthis.wrapper.storage.set('adapters', this.adapters);\n\t}\n\n\t/**\n\t * Sets the preferences for an adapter\n\t * @param id the id of the adapter\n\t * @param preferences the preferences to set\n\t */\n\tsetAdapterPreferences(id: string, preferences: any) {\n\t\tthis.wrapper.storage.set(id + '/preferences', preferences);\n\t}\n\n\t/**\n\t * Updates the preferences of an adapter by providing a subset of preference values\n\t * @param id the id of the adapter\n\t * @param preferences a subset of the adapter preferences to update\n\t */\n\tupdateAdapterPreferences(id: string, preferences: any) {\n\t\tthis.wrapper.storage.get(id + '/preferences').then((prevPrefs: any) => {\n\t\t\tObject.keys(prevPrefs).forEach(key => {\n\t\t\t\tif (\n\t\t\t\t\tpreferences[key] !== undefined &&\n\t\t\t\t\tprevPrefs[key] !== preferences[key]\n\t\t\t\t) {\n\t\t\t\t\tprevPrefs[key] = preferences[key];\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.setAdapterPreferences(id, prevPrefs);\n\t\t});\n\t}\n\n\t/**\n\t * Get the current preferences of an adapter by its id.\n\t * @param id the id of the adapter\n\t */\n\tgetAdapterPreferences(id: string) {\n\t\treturn this.wrapper.storage.get(id + '/preferences');\n\t}\n}\n"]}