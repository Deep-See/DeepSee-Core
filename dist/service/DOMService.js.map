{"version":3,"file":"DOMService.js","sourceRoot":"","sources":["../../src/service/DOMService.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;GAaG","sourcesContent":["/**\n *  Copyright 2019 The Adaptive Web. All Rights Reserved.\n * \n *  Licensed under the Mozilla Public License 2.0 (the \"License\"). \n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *  \n *      https://www.mozilla.org/en-US/MPL/2.0/\n *  \n *  or in the \"license\" file accompanying this file. This file is distributed \n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either \n *  express or implied. See the License for the specific language governing \n *  permissions and limitations under the License.\n */\n\n/**\n * DOMService helps to build AdaptiveWeb styled UIs in Adapters.\n */\nexport interface DOMService {\n\n    /**\n     * Returns a card div\n     * @param children the children of this element\n     * @param cssProperties the css properties of the card\n     */\n    card(children?: HTMLElement[] | AWElement[], cssProperties?: { [key: string] : string }): AWCard;\n\n    /**\n     * Returns a button\n     * @param text the button text\n     * @param onClick \n     * @param type \n     * @param cssProperties \n     */\n    button(text: string, onClick: Function, type?: string, cssProperties?: { [key: string] : string }): AWButton;\n\n    /**\n     * Returns a text element\n     * @param text \n     * @param size \n     * @param cssProperties \n     */\n    text(text: string, size?: number, cssProperties?: { [key: string] : string }): AWText;\n\n}\n\nexport interface AWElement {\n\n    setCSSProperties(properties: { [key: string]: string }): void;\n    setCSSProperty(property: string, value: string): void;\n    appendChild(child: HTMLElement): void;\n\n}\n\nexport interface AWCard extends AWElement {\n\n    element: HTMLDivElement;\n\n}\n\nexport interface AWText extends AWElement {\n\n    element: HTMLDivElement;\n\n    setText(newText: string): void;\n\n}\n\nexport interface AWButton extends AWElement {\n\n    element: HTMLButtonElement;\n\n    setText(newText: string): void;\n    setType(newType: string): void;\n\n}"]}