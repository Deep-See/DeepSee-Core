{"version":3,"file":"DOMService.js","sourceRoot":"","sources":["../../src/service/DOMService.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;GAaG","sourcesContent":["/**\n *  Copyright 2019 The Adaptive Web. All Rights Reserved.\n *\n *  Licensed under the Mozilla Public License 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *      https://www.mozilla.org/en-US/MPL/2.0/\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\n/**\n * DOMService helps to build AdaptiveWeb styled UIs in Adapters.\n */\nexport interface DOMService {\n\t/**\n\t * Returns a card div\n\t * @param children the children of this element\n\t * @param cssProperties the css properties of the card\n\t */\n\tcard(\n\t\tchildren?: (HTMLElement | AWElement)[],\n\t\tcssProperties?: { [key: string]: string }\n\t): AWCard;\n\n\t/**\n\t * Returns a button\n\t * @param text the button text\n\t * @param onClick\n\t * @param type\n\t * @param cssProperties\n\t */\n\tbutton(\n\t\ttext: string,\n\t\tonClick: Function,\n\t\ttype?: string,\n\t\tcssProperties?: { [key: string]: string }\n\t): AWButton;\n\n\t/**\n\t * Returns a text element\n\t * @param text\n\t * @param size\n\t * @param cssProperties\n\t */\n\ttext(\n\t\ttext: string,\n\t\tsize?: number,\n\t\tcssProperties?: { [key: string]: string }\n\t): AWText;\n}\n\nexport interface AWElement {\n\tsetCSSProperties(properties: { [key: string]: string }): void;\n\tsetCSSProperty(property: string, value: string): void;\n\tappendChild(child: HTMLElement | AWElement): void;\n\n\t/**\n\t * Sets the visibility of the element for sighted users. Set\n\t * to true if you want to hide an element from sighted users,\n\t * but still allow screen-reader users to access it.\n\t * @param visibility whether or not the element is visible for sighted users\n\t */\n\tsetSightedVisibility(visibility: boolean): void;\n}\n\nexport interface AWCard extends AWElement {\n\telement: HTMLDivElement;\n}\n\nexport interface AWText extends AWElement {\n\telement: HTMLDivElement;\n\n\tsetText(newText: string): void;\n}\n\nexport interface AWButton extends AWElement {\n\telement: HTMLButtonElement;\n\n\tsetText(newText: string): void;\n\tsetType(newType: string): void;\n}\n"]}