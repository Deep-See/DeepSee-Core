{"version":3,"file":"StorageService.js","sourceRoot":"","sources":["../../src/service/StorageService.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;GAaG;;AAEH;;GAEG;AACH,IAAY,WAUX;AAVD,WAAY,WAAW;IACnB;;;OAGG;IACH,6CAAI,CAAA;IACJ;;OAEG;IACH,+CAAK,CAAA;AACT,CAAC,EAVW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAUtB","sourcesContent":["/**\n *  Copyright 2019 The Adaptive Web. All Rights Reserved.\n * \n *  Licensed under the Mozilla Public License 2.0 (the \"License\"). \n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *  \n *      https://www.mozilla.org/en-US/MPL/2.0/\n *  \n *  or in the \"license\" file accompanying this file. This file is distributed \n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either \n *  express or implied. See the License for the specific language governing \n *  permissions and limitations under the License.\n */\n\n/**\n * The type of storage available\n */\nexport enum StorageType {\n    /**\n     * Sync allows for storage of data across devices, such as sharing\n     * between desktop and mobile. Sync is preferred to local storage.\n     */\n    SYNC,\n    /**\n     * Local storage saves only to this installation of the browser/device.\n     */\n    LOCAL\n}\n\n/**\n * StorageService describes how to access the storage.\n */\nexport interface StorageService {\n\n    /**\n     * Sets a key in the store to a given value.\n     * @param key the key to set in the store\n     * @param value the value to set the given entry to\n     * @param type the type of storage, defaults to StorageType.SYNC\n     */\n    set(key: string, value: any, type?: StorageType): boolean;\n\n    /**\n     * Fetches the value stored at the given key\n     * @param key the key to retrieve\n     */\n    get(key: string): any;\n\n}"]}