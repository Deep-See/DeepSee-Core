{"version":3,"file":"StorageService.js","sourceRoot":"","sources":["../../src/service/StorageService.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;GAaG;;AAEH;;GAEG;AACH,IAAY,WAUX;AAVD,WAAY,WAAW;IACtB;;;OAGG;IACH,6CAAI,CAAA;IACJ;;OAEG;IACH,+CAAK,CAAA;AACN,CAAC,EAVW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAUtB","sourcesContent":["/**\n *  Copyright 2019 The Adaptive Web. All Rights Reserved.\n *\n *  Licensed under the Mozilla Public License 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *      https://www.mozilla.org/en-US/MPL/2.0/\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\n/**\n * The type of storage available\n */\nexport enum StorageType {\n\t/**\n\t * Sync allows for storage of data across devices, such as sharing\n\t * between desktop and mobile. Sync is preferred to local storage.\n\t */\n\tSYNC,\n\t/**\n\t * Local storage saves only to this installation of the browser/device.\n\t */\n\tLOCAL\n}\n\n/**\n * StorageService describes how to access the storage.\n */\nexport interface StorageService {\n\t/**\n\t * Sets a key in the store to a given value.\n\t * @param key the key to set in the store\n\t * @param value the value to set the given entry to\n\t * @param type the type of storage, defaults to StorageType.SYNC\n\t */\n\tset(key: string, value: any, type?: StorageType): Promise<any>;\n\n\t/**\n\t * Fetches the value stored at the given key\n\t * @param key the key to retrieve\n\t */\n\tget(key: string, type?: StorageType): Promise<any>;\n}\n"]}