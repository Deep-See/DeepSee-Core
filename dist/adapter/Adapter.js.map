{"version":3,"file":"Adapter.js","sourceRoot":"","sources":["../../src/adapter/Adapter.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;GAaG;;AAKH;;GAEG;AACH,MAAa,OAAO;IAiChB,YAAY,EAAU,EACV,IAAY,EACZ,WAAmB,EACnB,OAAe,EACf,SAAiB,EAAE,EACnB,YAAqB,KAAK,EAC1B,OAAiB,EAAE,EACnB,mBAA4C,EAAE;QAEtD,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;IAC7C,CAAC;IAED;;OAEG;IACH,OAAO,CAAC,EAAmB;QACvB,CAAC,UAAS,EAAmB,EAAE,SAAiB,EAAE,MAAc;YAC5D,IAAI,CAAC,SAAS,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAChC,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,UAAU,CAAC,GAAQ;QACtB,IAAI,OAAO,GAAG,KAAK,QAAQ;YAAE,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAEnD,OAAO,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE,EACN,GAAG,CAAC,IAAI,EACR,GAAG,CAAC,WAAW,EACf,GAAG,CAAC,OAAO,EACX,GAAG,CAAC,MAAM,EACV,GAAG,CAAC,SAAS,EACb,GAAG,CAAC,IAAI,EACR,GAAG,CAAC,gBAAgB,CAAC,CAAC;IAC7C,CAAC;CAEJ;AA9ED,0BA8EC","sourcesContent":["/**\n *  Copyright 2019 The Adaptive Web. All Rights Reserved.\n * \n *  Licensed under the Mozilla Public License 2.0 (the \"License\"). \n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *  \n *      https://www.mozilla.org/en-US/MPL/2.0/\n *  \n *  or in the \"license\" file accompanying this file. This file is distributed \n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either \n *  express or implied. See the License for the specific language governing \n *  permissions and limitations under the License.\n */\n\nimport { IAdapterContext } from './AdapterContext';\nimport { AdapterPreferenceSchema } from './AdapterPreferenceSchema';\n\n/**\n * Adapters are adaptive modules to be injected into the page.\n */\nexport class Adapter {\n\n    /**\n     * The unique id of this adapter.\n     */\n    id: string;\n    /**\n     * The name of the adapter.\n     */\n    name: string;\n    /**\n     * A user friendly description of this adapter.\n     */\n    description: string;\n    /**\n     * The version string.\n     */\n    version: string;\n    /**\n     * The preference schema for this adapter.\n     */\n    preferenceSchema: AdapterPreferenceSchema;\n    /**\n     * The script itself. Represented as a string to allow for an eval call after being injected into the page.\n     */\n    script: string;\n    /**\n     * Tags that this adapter\n     */\n    tags: string[];\n    /* Denotes whether this adapter was installed from developer mode */\n    developer: boolean;\n\n    constructor(id: string,\n                name: string,\n                description: string,\n                version: string,\n                script: string = '',\n                developer: boolean = false,\n                tags: string[] = [],\n                preferenceSchema: AdapterPreferenceSchema = {}\n                ) {\n        this.id = id;\n        this.name = name;\n        this.description = description;\n        this.version = version;\n        this.script = script;\n        this.developer = developer;\n        this.tags = tags;\n        this.preferenceSchema = preferenceSchema;\n    }\n    \n    /**\n     * Executes the adapter code.\n     */\n    execute(aw: IAdapterContext) {\n        (function(aw: IAdapterContext, rawScript: string, window: Window) { \n            eval(rawScript); \n        })(aw, this.script, window);\n    }\n\n    /**\n     * Creates an instance of an Adapter from an object or string.\n     * @param obj the object to initiate from. Can be either a JSON string or object.\n     */\n    static fromObject(obj: any): Adapter {\n        if (typeof obj === 'string') obj = JSON.parse(obj);\n\n        return new Adapter(obj.id, \n                           obj.name, \n                           obj.description, \n                           obj.version, \n                           obj.script, \n                           obj.developer, \n                           obj.tags, \n                           obj.preferenceSchema);\n    }\n\n}"]}