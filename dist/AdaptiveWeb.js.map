{"version":3,"file":"AdaptiveWeb.js","sourceRoot":"","sources":["../src/AdaptiveWeb.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;GAaG;;AAIH,6DAA0D;AAE1D;;GAEG;AACH,MAAqB,WAAW;IAK5B,YAAY,OAAgB;QAF5B,aAAQ,GAAc,EAAE,CAAC;QAGrB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC3B,CAAC;IAED;;OAEG;IACH,eAAe;QACX,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,gBAAyB,EAAE,EAAE;YAChD,MAAM,EAAE,GAAG,IAAI,+BAAc,CAAC,IAAI,CAAC,OAAO,EAAE,gBAAgB,CAAC,CAAC;YAC9D,gBAAgB,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;OAGG;IACH,aAAa,CAAC,OAAgB;QAC1B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,eAAwB,EAAE,EAAE;YAC/C,IAAI,eAAe,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,EAAE;gBACtC,MAAM,IAAI,KAAK,CAAC,2BAA2B,GAAG,OAAO,CAAC,IAAI,GAAG,uBAAuB,CAAC,CAAC;aACzF;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAChC,CAAC;IAED;;;OAGG;IACH,aAAa,CAAC,IAAY;QACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,OAAgB,EAAE,EAAE;YACtD,OAAO,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC;QAChC,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;OAIG;IACH,qBAAqB,CAAC,IAAY,EAAE,WAAgB;QAChD,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,cAAc,EAAE,WAAW,CAAC,CAAC;IACjE,CAAC;CAEJ;AAnDD,8BAmDC","sourcesContent":["/**\n *  Copyright 2019 The Adaptive Web. All Rights Reserved.\n * \n *  Licensed under the Mozilla Public License 2.0 (the \"License\"). \n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *  \n *      https://www.mozilla.org/en-US/MPL/2.0/\n *  \n *  or in the \"license\" file accompanying this file. This file is distributed \n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either \n *  express or implied. See the License for the specific language governing \n *  permissions and limitations under the License.\n */\n\nimport { Wrapper } from \"./wrapper\";\nimport { Adapter } from \"./adapter/Adapter\";\nimport { AdapterContext } from './adapter/AdapterContext';\n\n/**\n * Adapters are adaptive modules to be injected into the page.\n */\nexport default class AdaptiveWeb {\n\n    wrapper: Wrapper;\n    adapters: Adapter[] = [];\n\n    constructor(wrapper: Wrapper) {\n        this.wrapper = wrapper;\n    }\n\n    /**\n     * Execute the attached adapters\n     */\n    executeAdapters() {\n        this.adapters.forEach((executingAdapter: Adapter) => {\n            const aw = new AdapterContext(this.wrapper, executingAdapter);\n            executingAdapter.execute(aw);\n        });\n    }\n\n    /**\n     * Attaches an adapter\n     * @param adapter the adapter to attach\n     */\n    attachAdapter(adapter: Adapter) {\n        this.adapters.forEach((attachedAdapter: Adapter) => {\n            if (attachedAdapter.uuid == adapter.uuid) {\n                throw new Error('An adapter with the UUID ' + adapter.uuid + ' is already attached.');\n            }\n        });\n        this.adapters.push(adapter);\n    }\n\n    /**\n     * Detach an adapter\n     * @param uuid the uuid of the adapter to detach\n     */\n    detachAdapter(uuid: string) {\n        this.adapters = this.adapters.filter((adapter: Adapter) => {\n            return adapter.uuid != uuid;\n        });\n    }\n\n    /**\n     * Sets the preferences for an adapter\n     * @param uuid the uuid of the adapter\n     * @param preferences the preferences to set\n     */\n    setAdapterPreferences(uuid: string, preferences: any) {\n        this.wrapper.storage.set(uuid + '/preferences', preferences);\n    }\n\n}"]}